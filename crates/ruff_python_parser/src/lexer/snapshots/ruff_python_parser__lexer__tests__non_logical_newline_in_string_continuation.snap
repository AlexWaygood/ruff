---
source: crates/ruff_python_parser/src/lexer/mod.rs
expression: tokens
---
[
    Token {
        kind: Lpar,
        length: 1,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: NonLogicalNewline,
        length: 1,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: Whitespace,
        length: 8,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: String,
        length: 3,
        value: Some(
            "'a'",
        ),
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: NonLogicalNewline,
        length: 1,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: Whitespace,
        length: 8,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: String,
        length: 3,
        value: Some(
            "'b'",
        ),
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: NonLogicalNewline,
        length: 1,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: NonLogicalNewline,
        length: 1,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: Whitespace,
        length: 8,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: String,
        length: 3,
        value: Some(
            "'c'",
        ),
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: Whitespace,
        length: 1,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: LineContinuation,
        length: 1,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: NonLogicalNewline,
        length: 1,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: Whitespace,
        length: 8,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: String,
        length: 3,
        value: Some(
            "'d'",
        ),
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: NonLogicalNewline,
        length: 1,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: Whitespace,
        length: 4,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: Rpar,
        length: 1,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
    Token {
        kind: EndOfFile,
        length: 0,
        value: None,
        flags: TokenFlags(
            0x0,
        ),
    },
]
